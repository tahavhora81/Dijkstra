<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Concept Tree</title>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    
    <style>
        .node circle {
            fill: steelblue;
            stroke: white;
            stroke-width: 2px;
            cursor: pointer;
        }
        .node text {
            font: 12px sans-serif;
        }
        .link {
            fill: none;
            stroke: #ccc;
            stroke-width: 2px;
        }
    </style>
</head>

<body>
    <div class="container-fluid" >
        <header class=" py-3 mb-1 border-bottom" style="text-align: center">
            <a href="/" class="d-inline-flex link-body-emphasis text-decoration-none">
              <img src = "\images\logo_cropped.png" height="70px">
            </a>
        </header>
    </div>
      
    <p style="text-align: center; color:gray;">Here is the concept tree for: </p>
    <p style="text-align: center; color: blue"><%= topic_name %></p>

    <!--Print button to save the concept tree-->
    <div style="text-align: center;">
     <button type="button" class="btn btn-outline-primary" onclick="window.print()">Print Concept Tree</button>
    </div>

    <!-- D3.js script for displaying the learning tree using json-->
    <svg width="1000" height="600" style="margin-left: 200px"></svg>
    <script>
        let data = <%- JSON.stringify(data_json) %>;
        console.log(data);
        const width = 800;
        const height = 600;
        const svg = d3.select("svg").append("g").attr("transform", "translate(100,50)");
        const treeLayout = d3.tree().size([height - 100, width - 200]);
        
        let root;
        function initialize() {
            root = d3.hierarchy(data);
            root.x0 = height / 2;
            root.y0 = 0;
            root.children.forEach(collapse);
            update(root);
        }

        function collapse(d) {
            if (d.children) {
                d._children = d.children;
                d._children.forEach(collapse);
                d.children = null;
            }
        }

        function update(source) {
            treeLayout(root);
            const nodes = root.descendants();
            const links = root.links();

            svg.selectAll(".link").remove();
            svg.selectAll(".node").remove();

            svg.selectAll(".link")
                .data(links)
                .enter().append("path")
                .attr("class", "link")
                .attr("d", d3.linkHorizontal()
                    .x(d => d.y)
                    .y(d => d.x)
                );

            const node = svg.selectAll(".node")
                .data(nodes)
                .enter().append("g")
                .attr("class", "node")
                .attr("transform", d => `translate(${d.y},${d.x})`)
                .on("click", (event, d) => {
                    if (d.children) {
                        d._children = d.children;
                        d.children = null;
                    } else {
                        d.children = d._children;
                        d._children = null;
                    }
                    update(d);
                });

            node.append("circle")
                .attr("r", 10)
                .attr("fill", d => d._children ? "green" : "steelblue");

            node.append("text")
                .attr("dy", 3)
                .attr("x", d => d.children || d._children ? -12 : 12)
                .attr("text-anchor", d => d.children || d._children ? "end" : "start")
                .text(d => d.data.name)
                .style("white-space", "nowrap");
        }

        function updateData(newData) {
            data = newData;
            initialize();
        }

        initialize();
    </script>

    <form action="/" style="text-align:center; margin-bottom: 25px;">
        <input type="submit" class="btn btn-outline-success" style="margin-top: 20px;" value = "Go back to home!">
    </form> 
</body>
</html>
